
// module:HIGHLIGHTGROUP

#define VAR_HHGROUP_BOOLEAN_HIGHLIGHT1_ENABLED false
#define VAR_HHGROUP_BOOLEAN_HIGHLIGHT2_ENABLED false
#define VAR_HHGROUP_BOOLEAN_HIGHLIGHT3_ENABLED false
#define VAR_HHGROUP_BOOLEAN_HIGHLIGHT4_ENABLED false
#define VAR_HHGROUP_STRINGLIST_HIGHLIGHT1_ITEMS []
#define VAR_HHGROUP_STRINGLIST_HIGHLIGHT2_ITEMS []
#define VAR_HHGROUP_STRINGLIST_HIGHLIGHT3_ITEMS []
#define VAR_HHGROUP_STRINGLIST_HIGHLIGHT4_ITEMS []
#define VAR_HHGROUP_STYLE_HIGHLIGHT1_STYLE
#define VAR_HHGROUP_STYLE_HIGHLIGHT2_STYLE
#define VAR_HHGROUP_STYLE_HIGHLIGHT3_STYLE
#define VAR_HHGROUP_STYLE_HIGHLIGHT4_STYLE

if (VAR_HHGROUP_BOOLEAN_HIGHLIGHT1_ENABLED && name:VAR_HHGROUP_STRINGLIST_HIGHLIGHT1_ITEMS) {
  VAR_HHGROUP_STYLE_HIGHLIGHT1_STYLE
}
if (VAR_HHGROUP_BOOLEAN_HIGHLIGHT2_ENABLED && name:VAR_HHGROUP_STRINGLIST_HIGHLIGHT2_ITEMS) {
  VAR_HHGROUP_STYLE_HIGHLIGHT2_STYLE
}
if (VAR_HHGROUP_BOOLEAN_HIGHLIGHT3_ENABLED && name:VAR_HHGROUP_STRINGLIST_HIGHLIGHT3_ITEMS) {
  VAR_HHGROUP_STYLE_HIGHLIGHT3_STYLE
}
if (VAR_HHGROUP_BOOLEAN_HIGHLIGHT4_ENABLED && name:VAR_HHGROUP_STRINGLIST_HIGHLIGHT4_ITEMS) {
  VAR_HHGROUP_STYLE_HIGHLIGHT4_STYLE
}

// endmodule:HIGHLIGHTGROUP
// module:hides

#define VAR_HIDES_STRINGLIST__HIDE []

if (name:VAR_HIDES_STRINGLIST__HIDE) {
  hidden = true;
}

// endmodule:hides
// module:General Graardor

#define CONST_AREA_GENERALGRAARDOR [2863,5350,2,2877,5370,2]
#define CONST_GENERALGRAARDOR_IF(_cond) if (area:CONST_AREA_GENERALGRAARDOR && (_cond))



// label:100%
// enum:["Big bones","Frozen key piece (bandos)"]
#define VAR_GENERALGRAARDOR_ENUMLIST_FILTER_100 []
CONST_GENERALGRAARDOR_IF (name:VAR_GENERALGRAARDOR_ENUMLIST_FILTER_100) {
  hidden = true;
}

// label:Uniques
// enum:["Bandos chestplate","Bandos tassets","Bandos boots","Bandos hilt","Godsword shard 1","Godsword shard 2","Godsword shard 3"]
#define VAR_GENERALGRAARDOR_ENUMLIST_FILTER_UNIQUES []
CONST_GENERALGRAARDOR_IF (name:VAR_GENERALGRAARDOR_ENUMLIST_FILTER_UNIQUES) {
  hidden = true;
}

// label:Weapons and armour
// enum:["Rune longsword","Rune 2h sword","Rune platebody","Rune pickaxe"]
#define VAR_GENERALGRAARDOR_ENUMLIST_FILTER_WEAPONS []
CONST_GENERALGRAARDOR_IF (name:VAR_GENERALGRAARDOR_ENUMLIST_FILTER_WEAPONS) {
  hidden = true;
}

// label:Other
// enum:["Coins","Grimy snapdragon","Snapdragon seed","Super restore(4)","Adamantite ore","Coal","Magic logs","Nature rune"]
#define VAR_GENERALGRAARDOR_ENUMLIST_FILTER_OTHER []
CONST_GENERALGRAARDOR_IF (name:VAR_GENERALGRAARDOR_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}



// label:Tertiary
// enum:["Brimstone key","Long bone","Pet general graardor","Curved bone"]
#define VAR_GENERALGRAARDOR_ENUMLIST_FILTER_TERTIARY []
CONST_GENERALGRAARDOR_IF (name:VAR_GENERALGRAARDOR_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// endmodule:General Graardor// module:Commander Zilyana

#define CONST_AREA_COMMANDERZILYANA [2888,5257,0,2908,5276,0]
#define CONST_COMMANDERZILYANA_IF(_cond) if (area:CONST_AREA_COMMANDERZILYANA && (_cond))



// label:100%
// enum:["Bones","Frozen key piece (saradomin)"]
#define VAR_COMMANDERZILYANA_ENUMLIST_FILTER_100 []
CONST_COMMANDERZILYANA_IF (name:VAR_COMMANDERZILYANA_ENUMLIST_FILTER_100) {
  hidden = true;
}

// label:Uniques
// enum:["Saradomin sword","Saradomin's light","Armadyl crossbow","Saradomin hilt","Godsword shard 1","Godsword shard 2","Godsword shard 3"]
#define VAR_COMMANDERZILYANA_ENUMLIST_FILTER_UNIQUES []
CONST_COMMANDERZILYANA_IF (name:VAR_COMMANDERZILYANA_ENUMLIST_FILTER_UNIQUES) {
  hidden = true;
}

// label:Weapons and armour
// enum:["Adamant platebody","Rune dart","Rune kiteshield","Rune plateskirt"]
#define VAR_COMMANDERZILYANA_ENUMLIST_FILTER_WEAPONS []
CONST_COMMANDERZILYANA_IF (name:VAR_COMMANDERZILYANA_ENUMLIST_FILTER_WEAPONS) {
  hidden = true;
}

// label:Potions
// enum:["Prayer potion(4)","Saradomin brew(3)","Super restore(4)","Super defence(3)","Magic potion(3)"]
#define VAR_COMMANDERZILYANA_ENUMLIST_FILTER_POTIONS []
CONST_COMMANDERZILYANA_IF (name:VAR_COMMANDERZILYANA_ENUMLIST_FILTER_POTIONS) {
  hidden = true;
}

// label:Other
// enum:["Coins","Diamond","Law rune","Grimy ranarr weed","Ranarr seed","Magic seed"]
#define VAR_COMMANDERZILYANA_ENUMLIST_FILTER_OTHER []
CONST_COMMANDERZILYANA_IF (name:VAR_COMMANDERZILYANA_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}



// label:Tertiary
// enum:["Brimstone key","Pet zilyana"]
#define VAR_COMMANDERZILYANA_ENUMLIST_FILTER_TERTIARY []
CONST_COMMANDERZILYANA_IF (name:VAR_COMMANDERZILYANA_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// endmodule:Commander Zilyana// module:K'ril Tsutsaroth

#define CONST_AREA_KRILTSUTSAROTH [2917,5317,2,2937,5332,2]
#define CONST_KRILTSUTSAROTH_IF(_cond) if (area:CONST_AREA_KRILTSUTSAROTH && (_cond))



// label:100%
// enum:["Infernal ashes","Frozen key piece (zamorak)"]
#define VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_100 []
CONST_KRILTSUTSAROTH_IF (name:VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_100) {
  hidden = true;
}

// label:Uniques
// enum:["Steam battlestaff","Zamorakian spear","Staff of the dead","Zamorak hilt","Godsword shard 1","Godsword shard 2","Godsword shard 3"]
#define VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_UNIQUES []
CONST_KRILTSUTSAROTH_IF (name:VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_UNIQUES) {
  hidden = true;
}

// label:Weapons and armour
// enum:["Adamant arrow(p++)","Rune scimitar","Adamant platebody","Rune platelegs","Dragon dagger(p++)"]
#define VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_WEAPONS []
CONST_KRILTSUTSAROTH_IF (name:VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_WEAPONS) {
  hidden = true;
}

// label:Potions
// enum:["Super attack(3)","Super strength(3)","Super restore(3)","Zamorak brew(3)"]
#define VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_POTIONS []
CONST_KRILTSUTSAROTH_IF (name:VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_POTIONS) {
  hidden = true;
}

// label:Other
// enum:["Coins","Grimy lantadyme","Lantadyme seed","Death rune","Blood rune"]
#define VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_OTHER []
CONST_KRILTSUTSAROTH_IF (name:VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}



// label:Tertiary
// enum:["Brimstone key","Pet k'ril tsutsaroth"]
#define VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_TERTIARY []
CONST_KRILTSUTSAROTH_IF (name:VAR_KRILTSUTSAROTH_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// endmodule:K'ril Tsutsaroth// module:Kree'arra

#define CONST_AREA_KREEARRA [2823,5295,2,2843,5309,2]
#define CONST_KREEARRA_IF(_cond) if (area:CONST_AREA_KREEARRA && (_cond))



// label:100%
// enum:["Big bones","Feather","Frozen key piece (armadyl)"]
#define VAR_KREEARRA_ENUMLIST_FILTER_100 []
CONST_KREEARRA_IF (name:VAR_KREEARRA_ENUMLIST_FILTER_100) {
  hidden = true;
}

// label:Uniques
// enum:["Armadyl helmet","Armadyl chestplate","Armadyl chainskirt","Armadyl hilt","Godsword shard 1","Godsword shard 2","Godsword shard 3"]
#define VAR_KREEARRA_ENUMLIST_FILTER_UNIQUES []
CONST_KREEARRA_IF (name:VAR_KREEARRA_ENUMLIST_FILTER_UNIQUES) {
  hidden = true;
}

// label:Weapons and armour
// enum:["Black d'hide body","Rune crossbow"]
#define VAR_KREEARRA_ENUMLIST_FILTER_WEAPONS []
CONST_KREEARRA_IF (name:VAR_KREEARRA_ENUMLIST_FILTER_WEAPONS) {
  hidden = true;
}

// label:Runes and ammunition
// enum:["Mind rune","Rune arrow","Runite bolts","Dragonstone bolts (e)"]
#define VAR_KREEARRA_ENUMLIST_FILTER_RUNES []
CONST_KREEARRA_IF (name:VAR_KREEARRA_ENUMLIST_FILTER_RUNES) {
  hidden = true;
}

// label:Other
// enum:["Coins","Ranging potion(3)","Super defence(3)","Grimy dwarf weed","Dwarf weed seed","Crystal key","Yew seed"]
#define VAR_KREEARRA_ENUMLIST_FILTER_OTHER []
CONST_KREEARRA_IF (name:VAR_KREEARRA_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}



// label:Tertiary
// enum:["Brimstone key","Long bone","Pet kree'arra","Curved bone"]
#define VAR_KREEARRA_ENUMLIST_FILTER_TERTIARY []
CONST_KREEARRA_IF (name:VAR_KREEARRA_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// endmodule:Kree'arra// module:Nex

#define CONST_AREA_NEX [2910,5188,0,2940,5218,0]
#define CONST_NEX_IF(_cond) if (area:CONST_AREA_NEX && (_cond))







// label:100%
// enum:["Big bones"]
#define VAR_NEX_ENUMLIST_FILTER_100 []
CONST_NEX_IF (name:VAR_NEX_ENUMLIST_FILTER_100) {
  hidden = true;
}

// label:Uniques
// enum:["Ancient hilt","Nihil horn","Torva full helm (damaged)","Torva platebody (damaged)","Torva platelegs (damaged)","Zaryte vambraces"]
#define VAR_NEX_ENUMLIST_FILTER_UNIQUES []
CONST_NEX_IF (name:VAR_NEX_ENUMLIST_FILTER_UNIQUES) {
  hidden = true;
}

// label:Runes & ammunition
// enum:["Air rune","Fire rune","Blood rune","Death rune","Water rune","Soul rune","Dragon bolts (unf)","Onyx bolts (e)","Cannonball"]
#define VAR_NEX_ENUMLIST_FILTER_RUNES []
CONST_NEX_IF (name:VAR_NEX_ENUMLIST_FILTER_RUNES) {
  hidden = true;
}

// label:Resources
// enum:["Air orb","Coal","Runite ore","Uncut ruby","Uncut diamond","Wine of zamorak"]
#define VAR_NEX_ENUMLIST_FILTER_RESOURCES []
CONST_NEX_IF (name:VAR_NEX_ENUMLIST_FILTER_RESOURCES) {
  hidden = true;
}

// label:Consumables
// enum:["Shark","Prayer potion(4)","Saradomin brew(4)","Super restore(4)"]
#define VAR_NEX_ENUMLIST_FILTER_CONSUMABLES []
CONST_NEX_IF (name:VAR_NEX_ENUMLIST_FILTER_CONSUMABLES) {
  hidden = true;
}

// label:Other
// enum:["Blood essence","Coins","Rune sword","Ecumenical key shard","Nihil shard"]
#define VAR_NEX_ENUMLIST_FILTER_OTHER []
CONST_NEX_IF (name:VAR_NEX_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// label:Tertiary
// enum:["Clue scroll (elite)","Nexling"]
#define VAR_NEX_ENUMLIST_FILTER_TERTIARY []
CONST_NEX_IF (name:VAR_NEX_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}



// endmodule:Nex// module:Vorkath

// label:Hide un-noted blue d-hide
#define VAR_VORKATH_BOOLEAN_GENERAL_NOHIDE true
// label:Hide superior dragon bones (why?)
#define VAR_VORKATH_BOOLEAN_GENERAL_NOBONE false
CONST_VORKATH_IF (VAR_VORKATH_BOOLEAN_GENERAL_NOHIDE && name:"Blue dragonhide" && noted:false) {
  hidden = true;
}
CONST_VORKATH_IF (VAR_VORKATH_BOOLEAN_GENERAL_NOBONE && name:"Superior dragon bones" && noted:false) {
  hidden = true;
}

#define CONST_AREA_VORKATH [2256,4051,0,2288,4080,0]
#define CONST_VORKATH_IF(_cond) if (area:CONST_AREA_VORKATH && (_cond))

// label:Weapons and armour
// enum:["Rune longsword","Rune kiteshield","Battlestaff","Dragon battleaxe","Dragon longsword","Dragon platelegs","Dragon plateskirt"]
#define VAR_VORKATH_ENUMLIST_FILTER_WEAPONS []
CONST_VORKATH_IF (name:VAR_VORKATH_ENUMLIST_FILTER_WEAPONS) {
  hidden = true;
}

// label:Runes
// enum:["Chaos rune","Death rune","Wrath rune"]
#define VAR_VORKATH_ENUMLIST_FILTER_RUNES []
CONST_VORKATH_IF (name:VAR_VORKATH_ENUMLIST_FILTER_RUNES) {
  hidden = true;
}

// label:Dragonhide
// enum:["Blue dragonhide","Green dragonhide","Red dragonhide","Black dragonhide"]
#define VAR_VORKATH_ENUMLIST_FILTER_DRAGONHIDE []
CONST_VORKATH_IF (name:VAR_VORKATH_ENUMLIST_FILTER_DRAGONHIDE) {
  hidden = true;
}

// label:Fletching materials
// enum:["Dragon bolts (unf)","Sapphire bolt tips","Emerald bolt tips","Ruby bolt tips","Diamond bolt tips","Dragonstone bolt tips","Onyx bolt tips","Rune dart tip","Dragon dart tip","Dragon arrowtips"]
#define VAR_VORKATH_ENUMLIST_FILTER_FLETCHING []
CONST_VORKATH_IF (name:VAR_VORKATH_ENUMLIST_FILTER_FLETCHING) {
  hidden = true;
}



// label:Other
// enum:["Adamantite ore","Coins","Grapes","Magic logs","Manta ray","Dragon bones","Diamond","Dragonstone","Wrath talisman"]
#define VAR_VORKATH_ENUMLIST_FILTER_OTHER []
CONST_VORKATH_IF (name:VAR_VORKATH_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}



// label:Tertiary
// enum:["Scaly blue dragonhide","Vorkath's head","Brimstone key","Dragonbone necklace","Jar of decay","Vorki","Draconic visage","Skeletal visage"]
#define VAR_VORKATH_ENUMLIST_FILTER_TERTIARY []
CONST_VORKATH_IF (name:VAR_VORKATH_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// endmodule:Vorkath// module:Zulrah

#define CONST_ZULRAH_AREA [2260, 3066, 0, 2276, 3080, 0]
#define CONST_ZULRAH_IF(_cond) if (area:CONST_ZULRAH_AREA && (_cond))

// label:Weapons and armour
// enum:["Battlestaff","Dragon med helm","Dragon halberd"]
#define VAR_ZULRAH_ENUMLIST_FILTER_GEAR []

// label:Runes
// enum:["Death rune","Law rune","Chaos rune"]
#define VAR_ZULRAH_ENUMLIST_FILTER_RUNES []

// label:Herbs
// enum:["Snapdragon","Dwarf weed","Toadflax","Torstol"]
#define VAR_ZULRAH_ENUMLIST_FILTER_HERBS []

// label:Seeds
// enum:["Palm tree seed","Papaya tree seed","Calquat tree seed","Magic seed","Toadflax seed","Snapdragon seed","Dwarf weed seed","Torstol seed","Spirit seed"]
#define VAR_ZULRAH_ENUMLIST_FILTER_SEEDS ["Papaya tree seed","Calquat tree seed","Toadflax seed","Dwarf weed seed","Torstol seed"]

// label:Resources
// enum:["Snakeskin","Runite ore","Pure essence","Flax","Yew logs","Adamantite bar","Coal","Dragon bones","Mahogany logs"]
#define VAR_ZULRAH_ENUMLIST_FILTER_RESOURCES ["Snakeskin","Pure essence","Flax"]

// label:Other
// enum:["Zul-andra teleport","Manta ray","Antidote++(4)","Dragonstone bolt tips","Grapes","Coconut","Swamp tar","Zulrah's scales"]
#define VAR_ZULRAH_ENUMLIST_FILTER_OTHER ["Grapes","Swamp tar"]

CONST_ZULRAH_IF (name:VAR_ZULRAH_ENUMLIST_FILTER_GEAR) {
  hidden = true;
}
CONST_ZULRAH_IF (name:VAR_ZULRAH_ENUMLIST_FILTER_RUNES) {
  hidden = true;
}
CONST_ZULRAH_IF (name:VAR_ZULRAH_ENUMLIST_FILTER_HERBS) {
  hidden = true;
}
CONST_ZULRAH_IF (name:VAR_ZULRAH_ENUMLIST_FILTER_SEEDS) {
  hidden = true;
}
CONST_ZULRAH_IF (name:VAR_ZULRAH_ENUMLIST_FILTER_RESOURCES) {
  hidden = true;
}
CONST_ZULRAH_IF (name:VAR_ZULRAH_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// endmodule:Zulrah
// module:Phantom Muspah

#define CONST_MUSPAH_AREA [2816, 4224, 0, 2879, 4287, 0]
#define CONST_MUSPAH_IF(_cond) if (area:CONST_MUSPAH_AREA && (_cond))

// label:Unique
// enum:["Ancient essence","Frozen cache","Ancient icon"]
#define VAR_MOD_ENUMLIST_FILTER_UNIQUE []
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_UNIQUE) {
  hidden = true;
}

// label:Supplies
// enum:["Shark","Summer pie","Ancient brew(3)","Ranging potion(3)","Super restore(3)","Prayer potion(3)"]
#define VAR_MOD_ENUMLIST_FILTER_SUPPLIES ["Summer pie", "Ancient brew(3)"]
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_SUPPLIES) {
  hidden = true;
}

// label:Weapons and armour
// enum:["Rune kiteshield","Dragon plateskirt","Rune platelegs","Black d'hide body","Dragon platelegs","Rune sword"]
#define VAR_MOD_ENUMLIST_FILTER_GEAR ["Black d'hide body", "Rune sword"]
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_GEAR) {
  hidden = true;
}

// label:Runes and ammunition
// enum:["Law rune","Soul rune","Death rune","Smoke rune","Chaos rune","Fire rune","Cannonball"]
#define VAR_MOD_ENUMLIST_FILTER_RUNES []
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_RUNES) {
  hidden = true;
}

// label:Herbs
// enum:["Grimy toadflax","Grimy kwuarm","Grimy cadantine","Grimy dwarf weed","Grimy lantadyme"]
#define VAR_MOD_ENUMLIST_FILTER_HERBS []
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_HERBS) {
  hidden = true;
}

// label:Seeds
// enum:["Yew seed","Torstol seed","Palm tree seed","Ranarr seed","Snapdragon seed","Ranarr seed","Spirit seed"]
#define VAR_MOD_ENUMLIST_FILTER_SEEDS []
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_SEEDS) {
  hidden = true;
}

// label:Resources
// enum:["Adamantite ore","Gold ore","Teak plank","Molten glass","Pure essence","Coal","Runite ore","Silver ore"]
#define VAR_MOD_ENUMLIST_FILTER_RESOURCES []
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_RESOURCES) {
  hidden = true;
}

// label:Other
// enum:["Manta ray","Water orb","Dragon bolts (unf)","Limpwurt root"]
#define VAR_MOD_ENUMLIST_FILTER_OTHER ["Limpwurt root"]
CONST_MUSPAH_IF (name:VAR_MOD_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// endmodule:Phantom Muspah
// module:cox

#define CONST_COX_AREA []

#define VAR_COX_OVL_USERSTYLE 
#define VAR_COX_PEH_USERSTYLE 
#define VAR_COX_REV_USERSTYLE 
#define VAR_COX_XER_USERSTYLE 

#define VAR_COX_HIGHLIGHT []
#define VAR_COX_HIGHLIGHT_USERSTYLE 

if (name:VAR_COX_HIGHLIGHT) {
  VAR_COX_HIGHLIGHT_USERSTYLE
}

if (name:"overload*") {
  textColor = "#1e88e5";
  textAccent = 4;
  VAR_COX_OVL_USERSTYLE
}

if (name:"prayer enhance*") {
  textColor = "#ff00ff";
  textAccent = 4;
  VAR_COX_PEH_USERSTYLE
}

if (name:"revitalisation*") {
  textColor = "#e91e63";
  textAccent = 4;
  VAR_COX_REV_USERSTYLE
}

if (name:"xeric's aid*") {
  textColor = "#ffff00";
  textAccent = 4;
  VAR_COX_XER_USERSTYLE
}

// endmodule:cox
// module:toa

#define CONST_TOA_AREA []

#define VAR_TOA_AMB_USERSTYLE 
#define VAR_TOA_LQA_USERSTYLE 
#define VAR_TOA_NEC_USERSTYLE 
#define VAR_TOA_TOE_USERSTYLE 

#define VAR_TOA_HIGHLIGHT []
#define VAR_TOA_HIGHLIGHT_USERSTYLE 

if (name:VAR_TOA_HIGHLIGHT) {
  VAR_TOA_HIGHLIGHT_USERSTYLE
}

if (name:"ambrosia*") {
  textColor = "#e3ece3";
  textAccent = 4;
  VAR_TOA_AMB_USERSTYLE
}

if (name:"liquid adrenaline*") {
  textColor = "#35c6d7";
  textAccent = 4;
  VAR_TOA_LQA_USERSTYLE
}

if (name:"nectar*") {
  textColor = "#ffff00";
  textAccent = 4;
  VAR_TOA_NEC_USERSTYLE
}

if (name:"tears of elidinis*") {
  textColor = "#e91e63";
  textAccent = 4;
  VAR_TOA_TOE_USERSTYLE
}

// endmodule:toa
// module:unique

#define CONST_UNIQUE_STIER [\
  "*champion scroll",\
  "infernal cape",\
  "fire cape",\
  "dizana's quiver*",\
  "*max cape",\
  "unsired",\
  "ancient blood ornament kit",\
  "ultor vestige",\
  "venator vestige",\
  "bellator vestige",\
  "magus vestige",\
  "executioner's axe head",\
  "leviathan's lure",\
  "siren's staff",\
  "eye of the duke",\
  "*mutagen",\
  "slepey tablet",\
]
#define CONST_UNIQUE_ATIER [\
  "brimstone key",\
  "jar of*",\
  "noxious pommel",\
  "noxious point",\
  "noxious blade",\
  "*half of key (moon key)",\
]
#define CONST_UNIQUE_BTIER [\
  "dark totem",\
  "mossy key",\
  "giant key",\
  "ecumenical key",\
  "abyssal head",\
  "araxyte head",\
  "alchemical hydra heads",\
  "kbd heads",\
  "kq head*",\
  "dark claw",\
  "bludgeon claw",\
  "bludgeon spine",\
  "bludgeon axon",\
  "hydra's eye",\
  "hydra's fang",\
  "hydra's heart",\
  "strangled tablet",\
  "scarred tablet",\
  "sirenic tablet",\
  "frozen tablet",\
  "scurrius' spine",\
  "vorkath's head",\
]
#define CONST_UNIQUE_CTIER [\
  "dark totem top",\
  "dark totem base",\
  "dark totem middle",\
  "long bone",\
  "curved bone",\
  "looting bag",\
  "unidentified small fossil",\
  "unidentified medium fossil",\
  "unidentified large fossil",\
  "unidentified rare fossil",\
  "key master teleport",\
  "chromium ingot",\
  "blood quartz",\
  "smoke quartz",\
  "shadow quartz",\
  "ice quartz",\
  "pendant of ates*",\
  "frozen cache",\
  "ancient icon",\
  "charged ice",\
  "parasitic egg",\
]

#define VAR_UNIQUE_STIER_ADD []
#define VAR_UNIQUE_STIER_NOT []
#define VAR_UNIQUE_ATIER_ADD []
#define VAR_UNIQUE_ATIER_NOT []
#define VAR_UNIQUE_BTIER_ADD []
#define VAR_UNIQUE_BTIER_NOT []
#define VAR_UNIQUE_CTIER_ADD []
#define VAR_UNIQUE_CTIER_NOT []

#define VAR_UNIQUE_STIER_CUSTOMSTYLE
#define VAR_UNIQUE_ATIER_CUSTOMSTYLE
#define VAR_UNIQUE_BTIER_CUSTOMSTYLE
#define VAR_UNIQUE_CTIER_CUSTOMSTYLE

if (!name:VAR_UNIQUE_STIER_NOT && (name:CONST_UNIQUE_STIER || name:VAR_UNIQUE_STIER_ADD)) {
  LIB_COLOR3(RED, WHITE)
  fontType = 3;
  showLootbeam = true;
  VAR_UNIQUE_STIER_CUSTOMSTYLE
}
if (!name:VAR_UNIQUE_ATIER_NOT && (name:CONST_UNIQUE_ATIER || name:VAR_UNIQUE_ATIER_ADD)) {
  LIB_COLOR3(WHITE, LIB_LIGHT_BROWN)
  textAccent = 3;
  showLootBeam = true;
  VAR_UNIQUE_ATIER_CUSTOMSTYLE
}
if (!name:VAR_UNIQUE_BTIER_NOT && (name:CONST_UNIQUE_BTIER || name:VAR_UNIQUE_BTIER_ADD)) {
  LIB_COLOR3(BLACK, LIB_LIGHT_BROWN)
  textAccent = 3;
  VAR_UNIQUE_BTIER_CUSTOMSTYLE
}
if (!name:VAR_UNIQUE_CTIER_NOT && (name:CONST_UNIQUE_CTIER || name:VAR_UNIQUE_CTIER_ADD)) {
  LIB_COLOR3(LIB_LIGHT_BROWN, LIB_BURGUNDY)
  textAccent = 3;
  VAR_UNIQUE_CTIER_CUSTOMSTYLE
}

// endmodule:unique
// module:potion

#define CONST_POTION_HIGHLIGHT(_name, _color, _userstyle) \
  if (name:_name && noted:false) {\
    textColor = _color;\
    textAccent = TEXTACCENT_OUTLINE;\
    _userstyle\
  }

#define VAR_POTION_RESTORE_USERSTYLE
#define VAR_POTION_BREW_USERSTYLE
#define VAR_POTION_PRAYER_USERSTYLE
#define VAR_POTION_SANFEW_USERSTYLE
#define VAR_POTION_SUPERCOMBAT_USERSTYLE
#define VAR_POTION_RANGE_USERSTYLE
#define VAR_POTION_BASTION_USERSTYLE

CONST_POTION_HIGHLIGHT("super restore*", "#e91e63", VAR_POTION_RESTORE_USERSTYLE)
CONST_POTION_HIGHLIGHT("saradomin brew*", "#ffff00", VAR_POTION_BREW_USERSTYLE)
CONST_POTION_HIGHLIGHT("prayer potion*", "#59d6ae", VAR_POTION_PRAYER_USERSTYLE)
CONST_POTION_HIGHLIGHT("sanfew serum*", "#e59e9e", VAR_POTION_SANFEW_USERSTYLE)
CONST_POTION_HIGHLIGHT("*super combat potion*", "#2a9e16", VAR_POTION_SUPERCOMBAT_USERSTYLE)
CONST_POTION_HIGHLIGHT("*ranging potion*", "#5fb7da", VAR_POTION_RANGE_USERSTYLE)
CONST_POTION_HIGHLIGHT("*bastion potion*", "#db721c", VAR_POTION_BASTION_USERSTYLE)

// endmodule:potion
// module:value

// FIXME
meta {
  name = "riktenx/filterscape";
}

// FIXME
#define LIB_BROWN       "#d2b287"
#define LIB_LIGHT_BROWN "#af6025"
#define LIB_ORANGE      "#f05a23"
#define LIB_CARAMEL     "#f99619"
#define LIB_GOLD        "#d59f00"
#define LIB_BURGUNDY    "#350d0d"
#define LIB_DARK_GREEN  "#09600d"
#define LIB_KHAKI       "#beb287"

// FIXME
#define LIB_COLOR2(_fg) textColor = _fg; borderColor = _fg;
#define LIB_COLOR3(_fg, _bg) textColor = _fg; borderColor = _fg; backgroundColor = _bg;
#define LIB_HIDE1(_name) if (name:_name && quantity:==1) { hidden = true; }
#define LIB_DARK_BG(_name, _color) if (name:_name) { color = _color; borderColor = _color; backgroundColor = BLACK; }
#define LIB_TEXT_HIGHLIGHT(_name, _color) if (name:_name) { color = _color; textAccent = 2; }

#define VAR_VALUE_T9_ENABLED false
#define VAR_VALUE_T8_ENABLED false
#define VAR_VALUE_T7_ENABLED false
#define VAR_VALUE_T6_ENABLED false
#define VAR_VALUE_T5_ENABLED true
#define VAR_VALUE_T4_ENABLED true
#define VAR_VALUE_T3_ENABLED true
#define VAR_VALUE_T2_ENABLED true
#define VAR_VALUE_T1_ENABLED true
#define VAR_VALUE_T0_ENABLED true

#define VAR_VALUE_T9_VALUE 0
#define VAR_VALUE_T8_VALUE 0
#define VAR_VALUE_T7_VALUE 0
#define VAR_VALUE_T6_VALUE 0
#define VAR_VALUE_T5_VALUE 100_000_000
#define VAR_VALUE_T4_VALUE 10_000_000
#define VAR_VALUE_T3_VALUE 1_000_000
#define VAR_VALUE_T2_VALUE 500_000
#define VAR_VALUE_T1_VALUE 100_000
#define VAR_VALUE_T0_VALUE 10_000

#define VAR_VALUE_T9_CUSTOMSTYLE 
#define VAR_VALUE_T8_CUSTOMSTYLE 
#define VAR_VALUE_T7_CUSTOMSTYLE 
#define VAR_VALUE_T6_CUSTOMSTYLE 
#define VAR_VALUE_T5_CUSTOMSTYLE 
#define VAR_VALUE_T4_CUSTOMSTYLE 
#define VAR_VALUE_T3_CUSTOMSTYLE 
#define VAR_VALUE_T2_CUSTOMSTYLE 
#define VAR_VALUE_T1_CUSTOMSTYLE 
#define VAR_VALUE_T0_CUSTOMSTYLE 

if (value:>=VAR_VALUE_T5_VALUE) {
  LIB_COLOR3(RED, WHITE)
  fontType = 2;
  textAccent = 3;
  showLootBeam = true;
  VAR_VALUE_T5_CUSTOMSTYLE
}
if (value:>=VAR_VALUE_T4_VALUE) {
  LIB_COLOR3(WHITE, LIB_ORANGE)
  showLootBeam = true;
  VAR_VALUE_T4_CUSTOMSTYLE
}
if (value:>=VAR_VALUE_T3_VALUE) {
  LIB_COLOR3(BLACK, LIB_ORANGE)
  textAccent = 3;
  showLootbeam = true;
  lootbeamColor = LIB_ORANGE;
  menuTextColor = LIB_ORANGE;
  VAR_VALUE_T3_CUSTOMSTYLE
}
if (value:>=VAR_VALUE_T2_VALUE) {
  LIB_COLOR2(LIB_CARAMEL)
  textAccent = 2;
  VAR_VALUE_T2_CUSTOMSTYLE
}
if (value:>=VAR_VALUE_T1_VALUE) {
  textColor = LIB_GOLD;
  textAccent = 2;
  VAR_VALUE_T1_CUSTOMSTYLE
}
if (value:>=VAR_VALUE_T0_VALUE) {
  textColor = LIB_KHAKI;
  VAR_VALUE_T0_CUSTOMSTYLE
}

// endmodule:value
// module:currency

#define VAR_CURRENCY_ADD []
#define VAR_CURRENCY_NOT []

#define CONST_CURRENCY_ITEMS [\
  "Mole claw",\
  "Mole skin",\
  "Trading sticks",\
  "Numulite",\
  "Abyssal pearls",\
  "Anima-infused bark",\
  "Barronite shards",\
  "Blood money",\
  "Ecto-token",\
  "Frog token",\
  "Golden nugget",\
  "Glistening tear",\
  "Hallowed mark",\
  "Intelligence",\
  "Mark of grace",\
  "Mermaid's tear",\
  "Minnow",\
  "Molch pearl",\
  "Nuggets",\
  "Rare creature parts",\
  "Reward token credits",\
  "Stardust",\
  "Tokkul",\
  "Termites",\
  "Unidentified minerals",\
  "Warrior guild token",\
  "Blessed bone shards",\
  "Sun-kissed bones",\
  "Ecumenical key shard",\
]

#define VAR_CURRENCY_USERSTYLE 

if ((name:CONST_CURRENCY_ITEMS || name:VAR_CURRENCY_ADD) && !name:VAR_CURRENCY_NOT) {
  textColor = "#beb287";
  VAR_CURRENCY_USERSTYLE
}

// endmodule:currency
// module:clue

#define CONST_CLUE_DEFAULTBG             "#beb287"
#define CONST_CLUE_BEGINNER_DEFAULTCOLOR "#ffffff"
#define CONST_CLUE_EASY_DEFAULTCOLOR     "#09600d"
#define CONST_CLUE_MEDIUM_DEFAULTCOLOR   "#569699"
#define CONST_CLUE_HARD_DEFAULTCOLOR     "#833798"
#define CONST_CLUE_ELITE_DEFAULTCOLOR    "#bda518"
#define CONST_CLUE_MASTER_DEFAULTCOLOR   "#9b3026"

#define VAR_CLUE_HIDE []

#define VAR_CLUE_BEGINNER_CUSTOMSTYLE 
#define VAR_CLUE_EASY_CUSTOMSTYLE 
#define VAR_CLUE_MEDIUM_CUSTOMSTYLE 
#define VAR_CLUE_HARD_CUSTOMSTYLE 
#define VAR_CLUE_ELITE_CUSTOMSTYLE 
#define VAR_CLUE_MASTER_CUSTOMSTYLE 

if (name:VAR_CLUE_HIDE) { hidden = true; }

apply (name:["clue scroll*", "reward casket*", "challenge scroll*"]) {
  backgroundColor = CONST_CLUE_DEFAULTBG;
}

if (name:["clue scroll (beginner)", "reward casket (beginner)", "challenge scroll (beginner)"]) {
  LIB_COLOR2(CONST_CLUE_BEGINNER_DEFAULTCOLOR)
  VAR_CLUE_BEGINNER_CUSTOMSTYLE
}
if (name:["clue scroll (easy)", "reward casket (easy)", "challenge scroll (easy)"]) {
  LIB_COLOR2(CONST_CLUE_EASY_DEFAULTCOLOR)
  VAR_CLUE_EASY_CUSTOMSTYLE
}
if (name:["clue scroll (medium)", "reward casket (medium)", "challenge scroll (medium)"]) {
  LIB_COLOR2(CONST_CLUE_MEDIUM_DEFAULTCOLOR)
  VAR_CLUE_MEDIUM_CUSTOMSTYLE
}
if (name:["clue scroll (hard)", "reward casket (hard)", "challenge scroll (hard)"]) {
  LIB_COLOR2(CONST_CLUE_HARD_DEFAULTCOLOR)
  VAR_CLUE_HARD_CUSTOMSTYLE
}
if (name:["clue scroll (elite)", "reward casket (elite)", "challenge scroll (elite)"]) {
  LIB_COLOR2(CONST_CLUE_ELITE_DEFAULTCOLOR)
  VAR_CLUE_ELITE_CUSTOMSTYLE
}
if (name:["clue scroll (master)", "reward casket (master)", "challenge scroll (master)"]) {
  LIB_COLOR2(CONST_CLUE_MASTER_DEFAULTCOLOR)
  VAR_CLUE_MASTER_CUSTOMSTYLE
}

// endmodule:clue
// module:herb

#define CONST_HERB_HERBS [\
  "*guam leaf",\
  "*marrentill",\
  "*tarromin",\
  "*harralander",\
  "*ranarr weed",\
  "*toadflax",\
  "*irit leaf",\
  "*avantoe",\
  "*kwuarm",\
  "*huasca",\
  "*snapdragon",\
  "*cadantine",\
  "*lantadyme",\
  "*dwarf weed",\
  "*torstol",\
]

#define CONST_HERB_DEFAULTCOLOR GREEN

#define VAR_HERB_MINVALUE 0
#define VAR_HERB_SHOW []
#define VAR_HERB_HIDE []
#define VAR_HERB_CUSTOMSTYLE 

apply (name:CONST_HERB_HERBS) {
  textColor = CONST_HERB_DEFAULTCOLOR;
  VAR_HERB_CUSTOMSTYLE
}

apply (name:CONST_HERB_HERBS && value:<VAR_HERB_MINVALUE) { hidden = true; }

if (name:VAR_HERB_SHOW) { hidden = false; }
if (name:VAR_HERB_HIDE) { hidden = true; }

if (name:CONST_HERB_HERBS) {}

// endmodule:herb
